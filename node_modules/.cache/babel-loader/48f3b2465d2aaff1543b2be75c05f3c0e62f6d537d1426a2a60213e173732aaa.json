{"ast":null,"code":"import _slicedToArray from\"/Users/SYPHER/sypherGithub/React/appointment-planner-project-codecademy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{ContactForm}from\"../../components/contactForm/ContactForm\";import{TileList}from\"../../components/tileList/TileList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ContactsPage=function ContactsPage(_ref){var contacts=_ref.contacts,handleContacts=_ref.handleContacts;/*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),phone=_useState4[0],setPhone=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),duplicate=_useState8[0],setDuplicate=_useState8[1];useEffect(function(){setDuplicate(contacts.some(function(contact){return contact.name===name;}));},[name]);/*\r\n  Add contact info and clear data\r\n  if the contact name is not a duplicate\r\n  */var handleSubmit=function handleSubmit(e){e.preventDefault();try{if(!duplicate){handleContacts({name:name,phone:phone,email:email});// reset the state variables hence clearing the form fields;\nsetName(\"\");setPhone(\"\");setEmail(\"\");}}catch(e){console.error(\"Error creating contact: \"+e.message);}};/*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Contact\"}),/*#__PURE__*/_jsx(ContactForm,{name:name,setName:setName,phone:phone,setPhone:setPhone,email:email,setEmail:setEmail,handleSubmit:handleSubmit})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(TileList,{data:contacts})]})]});};","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsx","_jsx","jsxs","_jsxs","ContactsPage","_ref","contacts","handleContacts","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_useState5","_useState6","email","setEmail","_useState7","_useState8","duplicate","setDuplicate","some","contact","handleSubmit","e","preventDefault","console","error","message","children","data"],"sources":["/Users/SYPHER/sypherGithub/React/appointment-planner-project-codecademy/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({contacts, handleContacts}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setDuplicate(contacts.some((contact) => contact.name === name));\r\n  }, [name]);\r\n\r\n  /*\r\n  Add contact info and clear data\r\n  if the contact name is not a duplicate\r\n  */\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (!duplicate) {\r\n        handleContacts({ name, phone, email });\r\n\r\n        // reset the state variables hence clearing the form fields;\r\n        setName(\"\");\r\n        setPhone(\"\");\r\n        setEmail(\"\");\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error creating contact: \" + e.message);\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList data={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"6JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,OAASC,WAAW,KAAQ,0CAA0C,CACtE,OAASC,QAAQ,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9D,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAmC,IAA9B,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,cAAc,CAAAF,IAAA,CAAdE,cAAc,CACpD;AACF;AACA;AACA,IACE,IAAAC,SAAA,CAAwBZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAA0BjB,QAAQ,CAAC,EAAE,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAA0BrB,QAAQ,CAAC,EAAE,CAAC,CAAAsB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA/BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAAkCzB,QAAQ,CAAC,KAAK,CAAC,CAAA0B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA1CE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAE9BzB,SAAS,CAAC,UAAM,CACd2B,YAAY,CAAClB,QAAQ,CAACmB,IAAI,CAAC,SAACC,OAAO,QAAK,CAAAA,OAAO,CAACf,IAAI,GAAKA,IAAI,GAAC,CAAC,CACjE,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEV;AACF;AACA;AACA,IAEE,GAAM,CAAAgB,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAC1BA,CAAC,CAACC,cAAc,EAAE,CAElB,GAAI,CACF,GAAI,CAACN,SAAS,CAAE,CACdhB,cAAc,CAAC,CAAEI,IAAI,CAAJA,IAAI,CAAEI,KAAK,CAALA,KAAK,CAAEI,KAAK,CAALA,KAAM,CAAC,CAAC,CAEtC;AACAP,OAAO,CAAC,EAAE,CAAC,CACXI,QAAQ,CAAC,EAAE,CAAC,CACZI,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAE,MAAOQ,CAAC,CAAE,CACVE,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAGH,CAAC,CAACI,OAAO,CAAC,CACvD,CACF,CAAC,CAED;AACF;AACA;AACA,IAEE,mBACE7B,KAAA,QAAA8B,QAAA,eACE9B,KAAA,YAAA8B,QAAA,eACEhC,IAAA,OAAAgC,QAAA,CAAI,aAAW,EAAK,cACpBhC,IAAA,CAACH,WAAW,EACVa,IAAI,CAAEA,IAAK,CACXC,OAAO,CAAEA,OAAQ,CACjBG,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBG,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBO,YAAY,CAAEA,YAAa,EAC3B,GACM,cACV1B,IAAA,SAAM,cACNE,KAAA,YAAA8B,QAAA,eACEhC,IAAA,OAAAgC,QAAA,CAAI,UAAQ,EAAK,cACjBhC,IAAA,CAACF,QAAQ,EAACmC,IAAI,CAAE5B,QAAS,EAAG,GACpB,GACN,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}