{"ast":null,"code":"import _toConsumableArray from\"/Users/SYPHER/sypherGithub/React/appointment-planner-project-codecademy/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/SYPHER/sypherGithub/React/appointment-planner-project-codecademy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{RouterProvider,createBrowserRouter,createRoutesFromElements,Route,Navigate}from\"react-router-dom\";import Root,{ROUTES}from\"./components/root/Root\";import{AppointmentsPage}from\"./containers/appointmentsPage/AppointmentsPage\";import{ContactsPage}from\"./containers/contactsPage/ContactsPage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([// { name: \"a\", ph: \"1\", email: \"a@a\" },\n]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState([// { name: \"c\", contact: \"3\", date: \"\", time: \"\" },\n]),_useState4=_slicedToArray(_useState3,2),appointments=_useState4[0],setAppointments=_useState4[1];/*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */function handleContacts(obj){try{var newContact={name:obj.name,phone:obj.phone,email:obj.email};setContacts([].concat(_toConsumableArray(contacts),[newContact]));}catch(e){console.error(\"Error adding new Contact: \"+e.message);}}function handleAppointments(obj){try{var newAppointment={name:obj.currentName,contact:obj.contact,date:obj.date,time:obj.time};setAppointments([].concat(_toConsumableArray(appointments),[newAppointment]));}catch(e){console.error(\"Error adding new Appointment: \"+e.message);}}var router=createBrowserRouter(createRoutesFromElements(/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Root,{}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(Navigate,{to:ROUTES.CONTACTS,replace:true})}),/*#__PURE__*/_jsx(Route,{path:ROUTES.CONTACTS,element:/*#__PURE__*/_jsx(ContactsPage,{contacts:contacts,handleContacts:handleContacts})/* Add props to ContactsPage */}),/*#__PURE__*/_jsx(Route,{path:ROUTES.APPOINTMENTS,element:/*#__PURE__*/_jsx(AppointmentsPage,{contacts:contacts,appointments:appointments,handleAppointments:handleAppointments})/* Add props to AppointmentsPage */})]})));return/*#__PURE__*/_jsx(RouterProvider,{router:router});}export default App;","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","contacts","setContacts","_useState3","_useState4","appointments","setAppointments","handleContacts","obj","newContact","name","phone","email","concat","_toConsumableArray","e","console","error","message","handleAppointments","newAppointment","currentName","contact","date","time","router","path","element","children","index","to","CONTACTS","replace","APPOINTMENTS"],"sources":["/Users/SYPHER/sypherGithub/React/appointment-planner-project-codecademy/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  RouterProvider,\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([\r\n    // { name: \"a\", ph: \"1\", email: \"a@a\" },\r\n  ]);\r\n  const [appointments, setAppointments] = useState([\r\n    // { name: \"c\", contact: \"3\", date: \"\", time: \"\" },\r\n  ]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  function handleContacts(obj) {\r\n    try {\r\n      const newContact = {\r\n        name: obj.name,\r\n        phone: obj.phone,\r\n        email: obj.email,\r\n      };\r\n      setContacts([...contacts, newContact]);\r\n    } catch (e) {\r\n      console.error(\"Error adding new Contact: \" + e.message);\r\n    }\r\n  }\r\n\r\n  function handleAppointments(obj) {\r\n    try {\r\n      const newAppointment = {\r\n        name: obj.currentName,\r\n        contact: obj.contact,\r\n        date: obj.date,\r\n        time: obj.time,\r\n      };\r\n      setAppointments([...appointments, newAppointment]);\r\n    } catch (e) {\r\n      console.error(\"Error adding new Appointment: \" + e.message);\r\n    }\r\n  }\r\n\r\n  const router = createBrowserRouter(\r\n    createRoutesFromElements(\r\n      <Route path=\"/\" element={<Root />}>\r\n        <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n        <Route\r\n          path={ROUTES.CONTACTS}\r\n          element={\r\n            <ContactsPage\r\n              contacts={contacts}\r\n              handleContacts={handleContacts}\r\n            /> /* Add props to ContactsPage */\r\n          }\r\n        />\r\n        <Route\r\n          path={ROUTES.APPOINTMENTS}\r\n          element={\r\n            <AppointmentsPage\r\n              contacts={contacts}\r\n              appointments={appointments}\r\n              handleAppointments={handleAppointments}\r\n            /> /* Add props to AppointmentsPage */\r\n          }\r\n        />\r\n      </Route>\r\n    )\r\n  );\r\n\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}