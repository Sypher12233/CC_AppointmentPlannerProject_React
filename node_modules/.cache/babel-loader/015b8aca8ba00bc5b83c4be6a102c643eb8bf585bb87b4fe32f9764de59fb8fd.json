{"ast":null,"code":"var _jsxFileName = \"/Users/SYPHER/sypherGithub/Full-Stack-Dev-JS/JS/React/appointment-planner-project-codecademy/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isDuplicate = (newContact, existingContacts) => existingContacts.some(contact => contact.name === newContact.name);\nexport const ContactsPage = props => {\n  _s();\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const duplicateCheck = isDuplicate(contacts, props.contacts);\n    //   contacts.some((contact) =>\n    //   props.contacts.some((propContact) => propContact.name === contact.name)\n    // );\n    if (duplicateCheck) {\n      console.log(\"Contact already exists: \" + contacts.name);\n    }\n  }, [props.contacts]);\n\n  /*\r\n  Add contact info and clear data\r\n  if the contact name is not a duplicate\r\n  */\n  const handleSubmit = e => {\n    e.preventDefault();\n    try {\n      const newContactData = {\n        name: e.target.elements.name.value,\n        phone: e.target.elements.phone.value,\n        email: e.target.elements.email.value\n      };\n      const duplicateCheck = isDuplicate(newContactData, contacts);\n      if (duplicateCheck) {\n        console.log(\"Contact already exists: \" + newContactData.name);\n      } else {\n        setContacts([...contacts, newContactData]);\n        // reset the form fields;\n        e.target.reset();\n      }\n    } catch (e) {\n      console.error(\"Error creating contact: \" + e.message);\n    }\n  };\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: contacts,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        contac: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","isDuplicate","newContact","existingContacts","some","contact","name","ContactsPage","props","_s","contacts","setContacts","duplicateCheck","console","log","handleSubmit","e","preventDefault","newContactData","target","elements","value","phone","email","reset","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","contac","_c","$RefreshReg$"],"sources":["/Users/SYPHER/sypherGithub/Full-Stack-Dev-JS/JS/React/appointment-planner-project-codecademy/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nconst isDuplicate = (newContact, existingContacts) =>\r\n  existingContacts.some((contact) => contact.name === newContact.name);\r\n\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const duplicateCheck = isDuplicate(contacts, props.contacts);\r\n    //   contacts.some((contact) =>\r\n    //   props.contacts.some((propContact) => propContact.name === contact.name)\r\n    // );\r\n    if (duplicateCheck) {\r\n      console.log(\"Contact already exists: \" + contacts.name);\r\n    }\r\n  }, [props.contacts]);\r\n\r\n  /*\r\n  Add contact info and clear data\r\n  if the contact name is not a duplicate\r\n  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newContactData = {\r\n        name: e.target.elements.name.value,\r\n        phone: e.target.elements.phone.value,\r\n        email: e.target.elements.email.value,\r\n      };\r\n\r\n      const duplicateCheck = isDuplicate(newContactData, contacts);\r\n      if (duplicateCheck) {\r\n        console.log(\"Contact already exists: \" + newContactData.name);\r\n      } else {\r\n        setContacts([...contacts, newContactData]);\r\n        // reset the form fields;\r\n        e.target.reset();\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error creating contact: \" + e.message);\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm contacts={contacts} handleSubmit={handleSubmit}/>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList contac/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}