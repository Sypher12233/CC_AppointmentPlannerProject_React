{"ast":null,"code":"var _jsxFileName = \"/Users/SYPHER/sypherGithub/Full-Stack-Dev-JS/JS/React/appointment-planner-project-codecademy/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isDuplicate = (name, existingContacts) => existingContacts.some(contact => contact.name === name);\nexport const ContactsPage = props => {\n  _s();\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    const duplicateCheck = isDuplicate(name, props.contacts);\n    if (duplicateCheck) {\n      console.log(\"Contact already exists: \" + contacts.name);\n    }\n  }, [name]);\n\n  /*\r\n  Add contact info and clear data\r\n  if the contact name is not a duplicate\r\n  */\n  const handleSubmit = e => {\n    e.preventDefault();\n    try {\n      // const newContactData = {\n      setName = e.target.elements.name.value;\n      setPhone = e.target.elements.phone.value;\n      setEmail = e.target.elements.email.value;\n      // };\n\n      const duplicateCheck = isDuplicate(name, props.contacts);\n      if (duplicateCheck) {\n        console.log(\"Contact already exists: \" + newContactData.name);\n      } else {\n        props.handleContacts(name, phone, email);\n\n        // reset the form fields;\n        e.target.reset();\n      }\n    } catch (e) {\n      console.error(\"Error creating contact: \" + e.message);\n    }\n  };\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: contacts,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        contactsFromApp: props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"ADW0jlfwQVpGCrJ0CEmb5D+YHh8=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","isDuplicate","name","existingContacts","some","contact","ContactsPage","props","_s","setName","phone","setPhone","email","setEmail","duplicateCheck","contacts","console","log","handleSubmit","e","preventDefault","target","elements","value","newContactData","handleContacts","reset","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","contactsFromApp","_c","$RefreshReg$"],"sources":["/Users/SYPHER/sypherGithub/Full-Stack-Dev-JS/JS/React/appointment-planner-project-codecademy/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nconst isDuplicate = (name, existingContacts) =>\r\n  existingContacts.some((contact) => contact.name === name);\r\n\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const duplicateCheck = isDuplicate(name, props.contacts);\r\n    if (duplicateCheck) {\r\n      console.log(\"Contact already exists: \" + contacts.name);\r\n    }\r\n  }, [name]);\r\n\r\n  /*\r\n  Add contact info and clear data\r\n  if the contact name is not a duplicate\r\n  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // const newContactData = {\r\n      setName = e.target.elements.name.value;\r\n      setPhone = e.target.elements.phone.value;\r\n      setEmail = e.target.elements.email.value;\r\n      // };\r\n\r\n      const duplicateCheck = isDuplicate(name, props.contacts);\r\n      if (duplicateCheck) {\r\n        console.log(\"Contact already exists: \" + newContactData.name);\r\n      } else {\r\n        props.handleContacts(name, phone, email);\r\n        \r\n        // reset the form fields;\r\n        e.target.reset();\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error creating contact: \" + e.message);\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm contacts={contacts} handleSubmit={handleSubmit} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList contactsFromApp={props.contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}